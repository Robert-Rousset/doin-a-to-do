{"version":3,"sources":["redux/todoSlice.js","redux/store.js","componenets/dashboard/Nav.js","componenets/dashboard/SideBar.js","componenets/dashboard/AddTodo.js","componenets/Dashboard.js","componenets/SignIn.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","newTodo","id","Date","now","description","payload","completed","push","signIn","signedIn","changeTheme","theme","changeName","deleteTodo","filter","todo","completeTodo","map","actions","configureStore","reducer","user","userReducer","Nav","localStorage","getItem","useState","showModal","setShowModal","renderModal","event","themeName","target","innerHTML","console","log","setItem","className","onClick","stopPropagation","placeholder","removeItem","window","location","reload","SideBar","dispatch","useDispatch","useSelector","htmlFor","value","AddTodo","setTodo","onSubmit","preventDefault","type","onChange","Dashboard","SignIn","username","setUsername","errorMessage","setErrorMessage","length","setTimeout","pathname","App","to","exact","path","component","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0acb749c.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    todos: [],\r\n  },\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        description: action.payload.description,\r\n        completed: false,\r\n      };\r\n      state.todos.push(newTodo);\r\n    },\r\n    signIn: (state, action) => {\r\n      const signedIn = {\r\n        ...state,\r\n        name: action.payload.name,\r\n        signedIn: true,\r\n      };\r\n      return signedIn;\r\n    },\r\n    changeTheme: (state, action) => {\r\n      const changeTheme = {\r\n        ...state,\r\n        theme: action.payload.theme,\r\n      };\r\n      return changeTheme;\r\n    },\r\n    changeName: (state, action) => {\r\n      const changeName = {\r\n        ...state,\r\n        name: action.payload.name,\r\n      };\r\n      return changeName;\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\r\n      };\r\n    },\r\n    completeTodo: (state, action) => {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo.id === action.payload.id ? { ...todo, completed: true } : todo\r\n        ),\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodo, signIn, changeTheme, completeTodo, deleteTodo } =\r\n  userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./todoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// import Settings from \"./Settings\";\r\nimport { useState } from \"react\";\r\nimport store from \"../../redux/store\";\r\n\r\nfunction Nav() {\r\n  const theme = localStorage.getItem(\"theme\");\r\n  const [showModal, setShowModal] = useState();\r\n  function renderModal() {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"signedIn\");\r\n    localStorage.removeItem(\"username\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function changeTheme(event) {\r\n    const themeName = event.target.innerHTML;\r\n    console.log(themeName);\r\n    if (themeName === \"Default\") {\r\n      localStorage.setItem(\"theme\", \"default\");\r\n    }\r\n    if (themeName === \"Dark\") {\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    }\r\n  }\r\n\r\n  function stopPropagate(event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <div className=\"modal-background\" onClick={renderModal}>\r\n          <div className=\"modal\" onClick={stopPropagate}>\r\n            <h1>Settings</h1>\r\n            <h2>Username</h2>\r\n            <input placeholder={localStorage.getItem(\"username\")} />\r\n\r\n            <h2>Theme</h2>\r\n            <div className=\"button-container\">\r\n              <button\r\n                className={\r\n                  theme === \"default\" ? \"active\" : \"theme-button-default\"\r\n                }\r\n                onClick={changeTheme}\r\n              >\r\n                Default\r\n              </button>\r\n              <button\r\n                className={theme === \"dark\" ? \"active\" : \"theme-button-dark\"}\r\n                onClick={changeTheme}\r\n              >\r\n                Dark\r\n              </button>\r\n            </div>\r\n            <button className=\"modal-button\" onClick={renderModal}>\r\n              Confirm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      <nav>\r\n        <button onClick={renderModal}>Settings</button>\r\n        <span className=\"full-title\">Not Another Todo List</span>\r\n        <span className=\"short-title\">Todo List</span>\r\n        <button onClick={logout}>logout</button>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { completeTodo, deleteTodo } from \"../../redux/todoSlice\";\r\n\r\nfunction SideBar() {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.user.todos);\r\n  function completeTheTodo(id) {\r\n    dispatch(completeTodo({ id: id }));\r\n  }\r\n  function deleteTheTodo(id) {\r\n    dispatch(deleteTodo({ id: id }));\r\n  }\r\n  return (\r\n    <aside>\r\n      <label htmlFor=\"select-status\" className=\"aside-label\">\r\n        TODOS\r\n      </label>\r\n      <select name=\"select-status\" id=\"status\">\r\n        <option value=\"both\">All Todos</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"todo\">TODO :'(</option>\r\n      </select>\r\n\r\n      <ol>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id} className={todo.completed ? \"complete\" : \"\"}>\r\n            {todo.description}{\" \"}\r\n            {todo.completed ? (\r\n              <button\r\n                className=\"delete-todo-button\"\r\n                onClick={() => deleteTheTodo(todo.id)}\r\n              ></button>\r\n            ) : (\r\n              <button\r\n                className=\"complete-todo-button\"\r\n                onClick={() => completeTheTodo(todo.id)}\r\n              ></button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/todoSlice\";\r\n\r\nfunction AddTodo() {\r\n  const [todo, setTodo] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(addTodo({ description: todo }));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <label>ADD TODO</label>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <div className=\"input-background\">\r\n            <input\r\n              className=\"todoInput\"\r\n              placeholder=\"type todo here...\"\r\n              type=\"text\"\r\n              value={todo}\r\n              onChange={(event) => setTodo(event.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">+</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport Nav from \"./dashboard/Nav\";\r\nimport SideBar from \"./dashboard/SideBar\";\r\nimport AddTodo from \"./dashboard/AddTodo\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <main className=\"container\">\r\n        <AddTodo />\r\n        <SideBar />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn } from \"../redux/todoSlice\";\r\n\r\nfunction SignIn() {\r\n  const [username, setUsername] = useState();\r\n  const [errorMessage, setErrorMessage] = useState(\"hidden\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n    if (!username || username.length < 4) {\r\n      setErrorMessage(\"show\");\r\n      setTimeout(() => {\r\n        setErrorMessage(\"hidden\");\r\n      }, 5000);\r\n    } else if (username.length >= 4) {\r\n      dispatch(signIn({ name: username, signedIn: true }));\r\n      localStorage.setItem(\"signedIn\", true);\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"theme\", \"default\");\r\n      window.location.pathname = \"/dashboard\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"sign-in-form\" onSubmit={onSubmit}>\r\n      <h2>Username:</h2>\r\n      <input\r\n        placeholder=\"4+ characters\"\r\n        type=\"text\"\r\n        onChange={(event) => {\r\n          setUsername(event.target.value);\r\n        }}\r\n      />\r\n      <p className={errorMessage}>\r\n        Please enter a username with 4 or more characters{\" \"}\r\n      </p>\r\n\r\n      <button className=\"signIn-button\" type=\"submit\">\r\n        login\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Dashboard from \"./componenets/Dashboard\";\nimport SignIn from \"./componenets/SignIn\";\n\nfunction App() {\n  const signedIn = localStorage.getItem(\"signedIn\");\n  return (\n    <div className=\"background\">\n      <Router>\n        {signedIn ? (\n          <>\n            <Redirect to=\"/dashboard\" />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n          </>\n        ) : (\n          <>\n            <Redirect to=\"/signin\" />{\" \"}\n            <Route exact path=\"/signin\" component={SignIn} />\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}