{"version":3,"sources":["redux/todoSlice.js","redux/store.js","componenets/dashboard/Nav.js","componenets/dashboard/SideBar.js","componenets/dashboard/AddTodo.js","componenets/Dashboard.js","componenets/SignIn.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","newTodo","id","Date","now","description","payload","completed","push","signIn","signedIn","changeTheme","theme","changeName","completeTodo","map","todo","deleteTodo","filter","actions","configureStore","reducer","user","userReducer","Nav","localStorage","getItem","useState","username","setUsername","showModal","setShowModal","dispatch","useDispatch","renderModal","changeTheTheme","event","preventDefault","themeName","target","textContent","setItem","document","getElementById","className","onClick","onSubmit","stopPropagation","placeholder","onChange","value","type","removeItem","window","location","pathname","SideBar","useSelector","htmlFor","AddTodo","setTodo","Dashboard","SignIn","errorMessage","setErrorMessage","length","setTimeout","App","to","path","exact","component","ReactDOM","render","StrictMode","store"],"mappings":"2NAEMA,EAAYC,YAAY,CAC5BC,KAAM,QACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACf,IAAMC,EAAU,CACdC,GAAIC,KAAKC,MACTC,YAAaL,EAAOM,QAAQD,YAC5BE,WAAW,GAEbR,EAAMH,MAAMY,KAAKP,IAEnBQ,OAAQ,SAACV,EAAOC,GAMd,OALc,2BACTD,GADS,IAEZL,KAAMM,EAAOM,QAAQZ,KACrBgB,UAAU,KAIdC,YAAa,SAACZ,EAAOC,GACnB,IAAMW,EAAW,2BACZZ,GADY,IAEfa,MAAOZ,EAAOM,QAAQM,QAExB,OAAOD,GAETE,WAAY,SAACd,EAAOC,GAClB,IAAMa,EAAU,2BACXd,GADW,IAEdL,KAAMM,EAAOM,QAAQZ,OAEvB,OAAOmB,GAETC,aAAc,SAACf,EAAOC,GACpB,OAAO,2BACFD,GADL,IAEEH,MAAOG,EAAMH,MAAMmB,KAAI,SAACC,GAAD,OACrBA,EAAKd,KAAOF,EAAOM,QAAQJ,GAA3B,2BAAqCc,GAArC,IAA2CT,WAAW,IAASS,QAIrEC,WAAY,SAAClB,EAAOC,GAClB,OAAO,2BACFD,GADL,IAEEH,MAAOG,EAAMH,MAAMsB,QAAO,SAACF,GAAD,OAAUA,EAAKd,KAAOF,EAAOM,QAAQJ,YAMhE,EAOHV,EAAU2B,QANZrB,EADK,EACLA,QACAW,EAFK,EAELA,OACAE,EAHK,EAGLA,YACAE,EAJK,EAILA,WACAC,EALK,EAKLA,aACAG,EANK,EAMLA,WAEazB,IAAf,QC5De4B,cAAe,CAC5BC,QAAS,CACPC,KAAMC,K,OCgGKC,MAhGf,WACE,IAAMZ,EAAQa,aAAaC,QAAQ,SAEnC,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,cAEjB,SAASC,IACPH,GAAcD,GAShB,SAASK,EAAeC,GACtBA,EAAMC,iBACN,IAAMC,EAAYF,EAAMG,OAAOC,YACb,YAAdF,IACFb,aAAagB,QAAQ,QAAS,WAC9BT,EAASrB,EAAY,CAAEC,MAAO,aAC9B8B,SAASC,eAAe,KAAKC,UAAY,qBAEzB,SAAdN,IACFb,aAAagB,QAAQ,QAAS,QAC9BT,EAASrB,EAAY,CAAEC,MAAO,UAC9B8B,SAASC,eAAe,KAAKC,UAAY,wBAgB7C,OACE,qCACGd,EACC,qBAAKc,UAAU,mBAAmBC,QAASX,EAA3C,SACE,sBAAMY,SAdd,WACErB,aAAagB,QAAQ,WAAYb,GACjCI,EAASnB,EAAW,CAAEnB,KAAMkC,KAC5BM,KAWM,SACE,sBAAKU,UAAU,QAAQC,QATjC,SAAuBT,GACrBA,EAAMW,mBAQE,UACE,0CACA,0CACA,uBACEC,YAAavB,aAAaC,QAAQ,YAClCuB,SAAU,SAACb,GAAD,OAAWP,EAAYO,EAAMG,OAAOW,UAGhD,uCACA,sBAAKN,UAAU,mBAAf,UACE,wBACE1C,GAAG,IACH0C,UACY,YAAVhC,EAAsB,SAAW,uBAEnCiC,QAASV,EALX,qBASA,wBACEjC,GAAG,IACH0C,UAAqB,SAAVhC,EAAmB,SAAW,oBACzCiC,QAASV,EAHX,qBAQF,wBAAQgB,KAAK,SAASP,UAAU,eAAhC,4BAON,yCAEF,gCACE,wBAAQC,QAASX,EAAjB,sBACA,sBAAMU,UAAU,aAAhB,mCACA,sBAAMA,UAAU,cAAhB,uBACA,wBAAQC,QA9Ed,WACEpB,aAAa2B,WAAW,YACxB3B,aAAa2B,WAAW,YACxBC,OAAOC,SAASC,SAAW,iBA2EvB,2BClDOC,MA1Cf,WACE,IAAMxB,EAAWC,cACXrC,EAAQ6D,aAAY,SAAC1D,GAAD,OAAWA,EAAMuB,KAAK1B,SAOhD,OACE,kCACE,uBAAO8D,QAAQ,gBAAgBd,UAAU,cAAzC,mBAGA,yBAAQlD,KAAK,gBAAgBQ,GAAG,SAAhC,UACE,wBAAQgD,MAAM,OAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,yBAGF,6BACGtD,EAAMmB,KAAI,SAACC,GAAD,OACT,qBAAkB4B,UAAW5B,EAAKT,UAAY,WAAa,GAA3D,UACGS,EAAKX,YAAa,IAClBW,EAAKT,UACJ,wBACEqC,UAAU,qBACVC,QAAS,kBArBA3C,EAqBoBc,EAAKd,QApB9C8B,EAASf,EAAW,CAAEf,GAAIA,KAD5B,IAAuBA,KAwBX,wBACE0C,UAAU,uBACVC,QAAS,kBA7BE3C,EA6BoBc,EAAKd,QA5BhD8B,EAASlB,EAAa,CAAEZ,GAAIA,KAD9B,IAAyBA,OAmBRc,EAAKd,aCWTyD,MAhCf,WACE,MAAwBhC,qBAAxB,mBAAOX,EAAP,KAAa4C,EAAb,KAEM5B,EAAWC,cAQjB,OACE,oCACE,6CACA,sBAAMa,SATO,SAACV,GAChBA,EAAMC,iBAENL,EAASlC,EAAQ,CAAEO,YAAaW,MAM9B,SACE,sBAAK4B,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEA,UAAU,YACVI,YAAY,oBACZG,KAAK,OACLD,MAAOlC,EACPiC,SAAU,SAACb,GAAD,OAAWwB,EAAQxB,EAAMG,OAAOW,YAG9C,wBAAQC,KAAK,SAAb,wBCZKU,MAZf,WACE,OACE,qCACE,cAAC,EAAD,IACA,uBAAMjB,UAAU,YAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCoCOkB,MA3Cf,WACE,MAAgCnC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,UAAjD,mBAAOoC,EAAP,KAAqBC,EAArB,KAEMhC,EAAWC,cAkBjB,OACE,uBAAMW,UAAU,eAAeE,SAjBjC,SAAkBV,GAChBA,EAAMC,kBACDT,GAAYA,EAASqC,OAAS,GACjCD,EAAgB,QAChBE,YAAW,WACTF,EAAgB,YACf,MACMpC,EAASqC,QAAU,IAC5BjC,EAASvB,EAAO,CAAEf,KAAMkC,EAAUlB,UAAU,KAC5Ce,aAAagB,QAAQ,YAAY,GACjChB,aAAagB,QAAQ,WAAYb,GACjCH,aAAagB,QAAQ,QAAS,WAC9BY,OAAOC,SAASC,SAAW,kBAK7B,UACE,8CACA,uBACEP,YAAY,gBACZG,KAAK,OACLF,SAAU,SAACb,GACTP,EAAYO,EAAMG,OAAOW,UAG7B,oBAAGN,UAAWmB,EAAd,8DACoD,OAGpD,wBAAQnB,UAAU,iBAAiBO,KAAK,SAAxC,uBCdSgB,MArBf,WACE,IAAMzD,EAAWe,aAAaC,QAAQ,YACtC,OACE,qBAAKkB,UAAU,aAAf,SACE,cAAC,IAAD,UACGlC,EACC,qCACE,cAAC,IAAD,CAAU0D,GAAG,eACb,cAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWV,OAG5C,qCACE,cAAC,IAAD,CAAUO,GAAG,YAAa,IAC1B,cAAC,IAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWT,Y,MCXnDU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJjC,SAASC,eAAe,W","file":"static/js/main.bd23891b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    todos: [],\r\n  },\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        description: action.payload.description,\r\n        completed: false,\r\n      };\r\n      state.todos.push(newTodo);\r\n    },\r\n    signIn: (state, action) => {\r\n      const signedIn = {\r\n        ...state,\r\n        name: action.payload.name,\r\n        signedIn: true,\r\n      };\r\n      return signedIn;\r\n    },\r\n    changeTheme: (state, action) => {\r\n      const changeTheme = {\r\n        ...state,\r\n        theme: action.payload.theme,\r\n      };\r\n      return changeTheme;\r\n    },\r\n    changeName: (state, action) => {\r\n      const changeName = {\r\n        ...state,\r\n        name: action.payload.name,\r\n      };\r\n      return changeName;\r\n    },\r\n    completeTodo: (state, action) => {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) =>\r\n          todo.id === action.payload.id ? { ...todo, completed: true } : todo\r\n        ),\r\n      };\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTodo,\r\n  signIn,\r\n  changeTheme,\r\n  changeName,\r\n  completeTodo,\r\n  deleteTodo,\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./todoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeName, changeTheme } from \"../../redux/todoSlice\";\r\nimport store from \"../../redux/store\";\r\n\r\nfunction Nav() {\r\n  const theme = localStorage.getItem(\"theme\");\r\n\r\n  const [username, setUsername] = useState();\r\n  const [showModal, setShowModal] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function renderModal() {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"signedIn\");\r\n    localStorage.removeItem(\"username\");\r\n    window.location.pathname = \"/doin-a-to-do\";\r\n  }\r\n\r\n  function changeTheTheme(event) {\r\n    event.preventDefault();\r\n    const themeName = event.target.textContent;\r\n    if (themeName === \"Default\") {\r\n      localStorage.setItem(\"theme\", \"default\");\r\n      dispatch(changeTheme({ theme: \"default\" }));\r\n      document.getElementById(\"2\").className = \"theme-button-dark\";\r\n    }\r\n    if (themeName === \"Dark\") {\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n      dispatch(changeTheme({ theme: \"dark\" }));\r\n      document.getElementById(\"1\").className = \"theme-button-default\";\r\n    }\r\n  }\r\n\r\n  function resetButtons(themeName) {}\r\n\r\n  function changeUsername() {\r\n    localStorage.setItem(\"username\", username);\r\n    dispatch(changeName({ name: username }));\r\n    renderModal();\r\n  }\r\n\r\n  function stopPropagate(event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <div className=\"modal-background\" onClick={renderModal}>\r\n          <form onSubmit={changeUsername}>\r\n            <div className=\"modal\" onClick={stopPropagate}>\r\n              <h1>Settings</h1>\r\n              <h2>Username</h2>\r\n              <input\r\n                placeholder={localStorage.getItem(\"username\")}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n\r\n              <h2>Theme</h2>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  id=\"1\"\r\n                  className={\r\n                    theme === \"default\" ? \"active\" : \"theme-button-default\"\r\n                  }\r\n                  onClick={changeTheTheme}\r\n                >\r\n                  Default\r\n                </button>\r\n                <button\r\n                  id=\"2\"\r\n                  className={theme === \"dark\" ? \"active\" : \"theme-button-dark\"}\r\n                  onClick={changeTheTheme}\r\n                >\r\n                  Dark\r\n                </button>\r\n              </div>\r\n              <button type=\"submit\" className=\"modal-button\">\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n      <nav>\r\n        <button onClick={renderModal}>Settings</button>\r\n        <span className=\"full-title\">Not Another Todo List</span>\r\n        <span className=\"short-title\">Todo List</span>\r\n        <button onClick={logout}>logout</button>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { completeTodo, deleteTodo } from \"../../redux/todoSlice\";\r\n\r\nfunction SideBar() {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.user.todos);\r\n  function completeTheTodo(id) {\r\n    dispatch(completeTodo({ id: id }));\r\n  }\r\n  function deleteTheTodo(id) {\r\n    dispatch(deleteTodo({ id: id }));\r\n  }\r\n  return (\r\n    <aside>\r\n      <label htmlFor=\"select-status\" className=\"aside-label\">\r\n        TODOS\r\n      </label>\r\n      <select name=\"select-status\" id=\"status\">\r\n        <option value=\"both\">All Todos</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"todo\">TODO :'(</option>\r\n      </select>\r\n\r\n      <ol>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id} className={todo.completed ? \"complete\" : \"\"}>\r\n            {todo.description}{\" \"}\r\n            {todo.completed ? (\r\n              <button\r\n                className=\"delete-todo-button\"\r\n                onClick={() => deleteTheTodo(todo.id)}\r\n              ></button>\r\n            ) : (\r\n              <button\r\n                className=\"complete-todo-button\"\r\n                onClick={() => completeTheTodo(todo.id)}\r\n              ></button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/todoSlice\";\r\n\r\nfunction AddTodo() {\r\n  const [todo, setTodo] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(addTodo({ description: todo }));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <label>ADD TODO</label>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <div className=\"input-background\">\r\n            <input\r\n              className=\"todoInput\"\r\n              placeholder=\"type todo here...\"\r\n              type=\"text\"\r\n              value={todo}\r\n              onChange={(event) => setTodo(event.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">+</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport Nav from \"./dashboard/Nav\";\r\nimport SideBar from \"./dashboard/SideBar\";\r\nimport AddTodo from \"./dashboard/AddTodo\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <main className=\"container\">\r\n        <AddTodo />\r\n        <SideBar />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn } from \"../redux/todoSlice\";\r\n\r\nfunction SignIn() {\r\n  const [username, setUsername] = useState();\r\n  const [errorMessage, setErrorMessage] = useState(\"hidden\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n    if (!username || username.length < 4) {\r\n      setErrorMessage(\"show\");\r\n      setTimeout(() => {\r\n        setErrorMessage(\"hidden\");\r\n      }, 5000);\r\n    } else if (username.length >= 4) {\r\n      dispatch(signIn({ name: username, signedIn: true }));\r\n      localStorage.setItem(\"signedIn\", true);\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"theme\", \"default\");\r\n      window.location.pathname = \"/doin-a-to-do\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"sign-in-form\" onSubmit={onSubmit}>\r\n      <label>Username:</label>\r\n      <input\r\n        placeholder=\"4+ characters\"\r\n        type=\"text\"\r\n        onChange={(event) => {\r\n          setUsername(event.target.value);\r\n        }}\r\n      />\r\n      <p className={errorMessage}>\r\n        Please enter a username with 4 or more characters{\" \"}\r\n      </p>\r\n\r\n      <button className=\"sign-in-button\" type=\"submit\">\r\n        login\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Dashboard from \"./componenets/Dashboard\";\nimport SignIn from \"./componenets/SignIn\";\n\nfunction App() {\n  const signedIn = localStorage.getItem(\"signedIn\");\n  return (\n    <div className=\"background\">\n      <Router>\n        {signedIn ? (\n          <>\n            <Redirect to=\"/dashboard\" />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n          </>\n        ) : (\n          <>\n            <Redirect to=\"/signin\" />{\" \"}\n            <Route path=\"/signin\" exact component={SignIn} />\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}